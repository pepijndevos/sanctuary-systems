# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        uses: php-actions/composer@v6
        with:
          dev: no
          php_extensions: exif
      - name: Build ssg
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
        run: |
          cp .env.example .env
          npm ci && npm run build
          
          php artisan cache:clear
          php artisan config:cache
          php artisan route:cache
          php artisan statamic:stache:warm
          php artisan statamic:search:update --all
          php artisan statamic:static:clear
          php artisan statamic:assets:generate-presets

          php please ssg:generate
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: storage/app/static

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
